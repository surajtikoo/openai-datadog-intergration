<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>


#!/bin/bash

# Input JSON string
input='{
  "multiLocator": {
    "ab": "/*[local-name()=\"html\"][1]/*[local-name()=\"body\"][1]/*[local-name()=\"main\"][1]/*[local-name()=\"div\"][1]/*[local-name()=\"div\"][1]/*[local-name()=\"article\"][1]/*[local-name()=\"form\"][1]/*[local-name()=\"div\"][1]/*[local-name()=\"input\"][1]",
    "at": "/descendant::*[@name=\"user[email]\" and @value=\"\"]",
    "cl": "/descendant::*[contains(concat(' ', normalize-space(@class), ' '), \" sign-in__form \")]/descendant::*[contains(concat(' ', normalize-space(@class), ' '), \" form__control \")][1]",
    "co": "[{\"text\":\" email \",\"textType\":\"innerText\"}]",
    "ro": "//*[@id=\"user[email]\"]",
    "clt": "/descendant::*[contains(concat(' ', normalize-space(@class), ' '), \" sign-in__form \")]/descendant::*[contains(concat(' ', normalize-space(@class), ' '), \" form__control \")][1]"
  },
  "targetOuterHTML": "<input type=\"email\" id=\"user[email]\" name=\"user[email]\" value=\"\" placeholder=\"Email\" autocapitalize=\"off\" autocomplete=\"off\" autocorrect=\"off\" spellcheck=\"false\" required=\"\" class=\"form__control\" aria"
}'

# Output JSON formatting
output=$(jq -n --argjson input "$input" '{
  element: {
    multiLocator: $input.multiLocator,
    targetOuterHTML: $input.targetOuterHTML,
    userLocator: {
      values: [
        {
          type: "css",
          value: "suraj"
        }
      ]
    }
  }
}')

# Write to a file
echo "$output" > output.json

# Notify user
echo "Output has been written to output.json"

	
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.1.0</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.javatechie</groupId>
	<artifactId>openai</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>chatgpt-bot</name>
	<description>This is a sample application created to integrate with Open AI send metrics to Datadog</description>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.datadoghq/dd-trace-api -->
		<dependency>
			<groupId>com.datadoghq</groupId>
			<artifactId>dd-trace-api</artifactId>
			<version>1.34.0</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>datadog</id>
			<url>https://mvnrepository.com/artifact/com.datadoghq/dd-trace-api</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
